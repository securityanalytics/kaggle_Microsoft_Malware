#-*-coding:utf-8-*-
'''

Usage:
    python fetch_files.py -i trainlabel.csv -f family -s start startPoint -n number
    -f: family number, 1-9
        default value is 1
    -s: start point, such as 1, means from the first one to the nth binary and assembly files
        default value is 1
    -n: the number of binary files, and the number of assembly files in the specific family
        default value is 50

@version Python2.7
'''

import getopt
import sys
import os
import re

def usage():
    print '---------------------------'
    print(u"correct usage:python %s -i -f -s -n " %sys.argv[0]);
    print u"such as: python fetch_files.py -i trainlabel.csv -f family -s start startPoint -n number"
    print '---------------------------'

def main(trainlabel,family,startpoint,number):
    '''
    main function
    Args:
        trainlabel: the path to trainlabel.csv file
        family: family number, 1-9
        startpoint: start point, such as 1, means from the first one to the nth binary and assembly files
        number: the number of binary files, and the number of assembly files in the specific family
    '''
    with open(trainlabel,'r') as csvfile:
        num = 0
        for line in csvfile:
            #"01kcPWA9K2BOxQeS5Rju",1
            if num >= (number+startpoint):
                break
            matchObj = re.match( r'".*",{}'.format(family), line, re.M|re.I)
            if matchObj:
                # match successfully, then retrieve the id
                id = line[1:21]
                if num < startpoint:
                    num +=1
                    continue
                else:
                    num +=1
                    #os.system("unzip del.zip */{}.*".format(id))
                    #os.system("cp {}.*".format(id) .)

    csvfile.close()

if __name__ == '__main__':
    trainlabel = '../data/train/trainLabels.csv'
    #trainlabel = 'trainLabels.csv'
    family = 1
    startpoint= 1
    number = 50
    try:# retrieve parameters
        opts,args =getopt.getopt(sys.argv[1:],"h:u:p:d:")
        for name,value in opts:
            if name in ("-i"):
                trainlabel = value
            if name in ("-f"):
                family = value
            if name in ("-s"):
                startpoint = value
            if name in ("-n"):
                number = value
    except getopt.GetoptError:
        print "GetoptError"
        usage()
        sys.exit()
    main(trainlabel,family,startpoint,number)
    print '============================================'
    print u'Done'
    print '============================================'