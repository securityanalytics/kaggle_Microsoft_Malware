df = pd.read_csv("../data/final_feature_set.csv")
feature_names = df.columns.values[2:]
#df.head()

X3 = pd.DataFrame(df, columns=feature_names)
Y3 = df.Class

aucs =[]

from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier

interval = len(Y3)/10
print "len of y3 is {}".format(len(Y3))

rf_cl = RandomForestClassifier(n_estimators=25)

for i in range(0,10):
    X_test = X3[i*interval:(i+1)*interval]
    Y_test = Y3[i*interval:(i+1)*interval]
    #X_train = reviews[0:i*interval].append(reviews[(i+1)*interval:])
    #Y_train = data['positive'][0:i*interval]#.append(data['positive'][(i+1)*interval:])
    X_train = np.append(X3[0:i*interval],X3[(i+1)*interval:],axis=0)
    Y_train = np.append(Y3[0:i*interval],Y3[(i+1)*interval:],axis=0)
    
    
    rf_cl.fit(X_train, Y_train)
    
    acc = metrics.accuracy_score(rf_cl.predict(X_test), Y_test)
    
    print "accuracy is {} with fold {}".format(acc, i+1)
    aucs.append(acc)

print "mean accuracy is {}".format(np.mean(aucs))